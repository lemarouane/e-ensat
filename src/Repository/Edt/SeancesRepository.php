<?php

namespace App\Repository\Edt;

use Doctrine\ORM\Tools\Pagination\Paginator;
use App\Entity\Edt\Seances;
/**
 * StageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SeancesRepository extends \Doctrine\ORM\EntityRepository
{
	

    public function seancesexist($dateStopWeek,$nbr_week,$groupe) {

        $query="SELECT codeSeance FROM seances WHERE dateSeance BETWEEN DATE_ADD('".$dateStopWeek."', INTERVAL 1 DAY) AND DATE_ADD('".$dateStopWeek."', INTERVAL '".$nbr_week."' WEEK) AND deleted = 0 AND codeSeance IN (SELECT sg.codeSeance FROM ressources_groupes rg, seances_groupes sg WHERE rg.nom LIKE '".$groupe."%' AND sg.codeRessource = rg.codeGroupe) ";
        $stmt = $this->getEntityManager()->getConnection()->prepare($query);
        $stmt = $stmt->execute();
        return  $stmt->fetchAll();

    }

    public function seanceupdate($codeSeance) {

        $query = "UPDATE seances SET deleted=1 WHERE codeSeance = '".$codeSeance."'";
        $stmt = $this->getEntityManager()->getConnection()->prepare($query);
        $stmt->execute();

    }


    public function seancesexist1($dateStartWeek,$dateStopWeek,$groupe) {

        $query="SELECT * FROM seances 
            WHERE dateSeance BETWEEN '".$dateStartWeek."' AND '".$dateStopWeek."' 
            AND deleted = 0
            AND codeSeance IN (SELECT sg.codeSeance FROM ressources_groupes rg, seances_groupes sg WHERE rg.nom LIKE '".$groupe."%' AND sg.codeRessource = rg.codeGroupe) ";
        $stmt = $this->getEntityManager()->getConnection()->prepare($query);
        $stmt = $stmt->execute();
        return  $stmt->fetchAll();

    }

    public function codeSeanceMax() {

        $query = "SELECT Max(codeSeance) as codeSeance FROM seances";
        $stmt = $this->getEntityManager()->getConnection()->prepare($query);
        $stmt = $stmt->execute();
        return  $stmt->fetchAll();

    }

    public function insertSeance($codeSeance,$row,$w,$actuelDate) {

        $query = "INSERT INTO seances(codeSeance, dateSeance, heureSeance, dureeSeance, codeEnseignement, dateModif,dateCreation, deleted, codeProprietaire, commentaire, bloquee, diffusable, annulee)
            VALUES ('".$codeSeance."', DATE_ADD('".$row['dateSeance']."', INTERVAL ".$w." DAY), '".$row['heureSeance']."', '".$row['dureeSeance']."', '".$row['codeEnseignement']."', '".$actuelDate."', '".$actuelDate."', '".$row['deleted']."', '".$row['codeProprietaire']."', '".$row['commentaire']."', '".$row['bloquee']."', '".$row['diffusable']."', '".$row['annulee']."')";
        $stmt = $this->getEntityManager()->getConnection()->prepare($query);
        $stmt->execute();
        return  '1';

    }
    public function insertModifications($codeSeance,$actuelDate) {

        $query = "INSERT INTO modifications(code, dateModif, codeProprietaire, typeAction, numeroAction, commentaire, typeObjet)
            VALUES ('".$codeSeance."','".$actuelDate."',1117,1,0,'SEANCE SALLE',9)
            ,('".$codeSeance."','".$actuelDate."',1117,1,0,'SEANCE',9)
            ,('".$codeSeance."','".$actuelDate."',1117,1,0,'SEANCE GROUPE',9)
            ,('".$codeSeance."','".$actuelDate."',1117,1,0,'SEANCE PROF',9)";
        $stmt = $this->getEntityManager()->getConnection()->prepare($query);
        $stmt->execute();
        return  '1';

    }

    public function seancesGroupe($codeSeance) {

        $query = "SELECT codeRessource,deleted,codeProprietaire FROM seances_groupes WHERE codeSeance = '".$codeSeance."' AND deleted = 0";
        $stmt = $this->getEntityManager()->getConnection()->prepare($query);
        $stmt = $stmt->execute();
        return  $stmt->fetchAll();

    }
    
    public function insertseancesGroupe($codeSeance,$row_S_Grp,$actuelDate) {

        $query = "INSERT INTO seances_groupes(codeSeance, codeRessource, dateModif, deleted, codeProprietaire)
                VALUES ('".$codeSeance."', '".$row_S_Grp['codeRessource']."', '".$actuelDate."', '".$row_S_Grp['deleted']."', '".$row_S_Grp['codeProprietaire']."')";
        $stmt = $this->getEntityManager()->getConnection()->prepare($query);
        $stmt->execute();
        return  '1';

    }

    public function insertseancesHistorique($codeSeance,$row,$w,$actuelDate) {

        $query = "INSERT INTO seances_historique(codeSeance, dateSeance, heureSeance, dureeSeance, codeEnseignement, dateModif, deleted, codeProprietaire, commentaire, bloquee, diffusable, codeProprietaireModifieur, annulee)
            VALUES ('".$codeSeance."', DATE_ADD('".$row['dateSeance']."', INTERVAL ".$w." DAY), '".$row['heureSeance']."', '".$row['dureeSeance']."', '".$row['codeEnseignement']."', '".$actuelDate."', '".$row['deleted']."', '".$row['codeProprietaire']."', '".$row['commentaire']."', '".$row['bloquee']."', '".$row['diffusable']."', '".$row['codeProprietaire']."', '".$row['annulee']."')";
        $stmt = $this->getEntityManager()->getConnection()->prepare($query);
        $stmt->execute();
        return  '1';

    }


    public function seancesProfs($codeSeance) {

        $query = "SELECT codeRessource,deleted,codeProprietaire FROM seances_profs WHERE codeSeance = '".$codeSeance."' AND deleted = 0";
        $stmt = $this->getEntityManager()->getConnection()->prepare($query);
        $stmt = $stmt->execute();
        return  $stmt->fetchAll();

    }
    

    public function insertseancesProfs($codeSeance,$row_S_Prof,$actuelDate) {

        $query = "INSERT INTO seances_profs(codeSeance, codeRessource, dateModif, deleted, codeProprietaire)
                VALUES ('".$codeSeance."', '".$row_S_Prof['codeRessource']."', '".$actuelDate."', '".$row_S_Prof['deleted']."', '".$row_S_Prof['codeProprietaire']."')";
        $stmt = $this->getEntityManager()->getConnection()->prepare($query);
        $stmt->execute();
        return  '1';

    }


    public function seancesSalles($codeSeance) {

        $query = "SELECT codeRessource,deleted,codeProprietaire FROM seances_salles WHERE codeSeance = '".$codeSeance."' AND deleted = 0";
        $stmt = $this->getEntityManager()->getConnection()->prepare($query);
        $stmt = $stmt->execute();
        return  $stmt->fetchAll();

    }
    

    public function insertseancesSalles($codeSeance,$row_S_salle,$actuelDate) {

        $query = "INSERT INTO seances_salles(codeSeance, codeRessource, dateModif, deleted, codeProprietaire)
                VALUES ('".$codeSeance."', '".$row_S_salle['codeRessource']."' , '".$actuelDate."', '".$row_S_salle['deleted']."', '".$row_S_salle['codeProprietaire']."')";
        $stmt = $this->getEntityManager()->getConnection()->prepare($query);
        $stmt->execute();
        return  '1';

    }


    public function numeroCommandeMax() {

        $query = "SELECT Max(numeroCommande) as numeroCommande FROM utilisateurs_numeros_commandes";
        $stmt = $this->getEntityManager()->getConnection()->prepare($query);
        $stmt = $stmt->execute();
        return  $stmt->fetchAll();

    }

    public function insertUserNumCommandes($result_user_num_cmd,$actuelDate) {

        $query = "INSERT INTO utilisateurs_numeros_commandes(numeroCommande, dateCreation, typeCommande, codeUtilisateur, deleted)
            VALUES ('".$result_user_num_cmd."' ,'".$actuelDate."' , 1 , 7 , 0 )";
        $stmt = $this->getEntityManager()->getConnection()->prepare($query);
        $stmt->execute();
        return  '1';

    }


    public function codeActionMax() {

        $query = "SELECT Max(codeAction) as codeAction FROM utilisateurs_actions";
        $stmt = $this->getEntityManager()->getConnection()->prepare($query);
        $stmt = $stmt->execute();
        return  $stmt->fetchAll();

    }

    public function insertUserActions($result_user_act,$actuelDate,$result_user_num_cmd) {

        $query ="INSERT INTO utilisateurs_actions(codeAction, dateDebut, dateFin, achevee, typeAction, codeUtilisateur, deleted, numeroCommande) 
            VALUES ('".$result_user_act."' , '".$actuelDate."' , '".$actuelDate."' , 1 , 1 , 7 , 0 , '".$result_user_num_cmd."')";
        $stmt = $this->getEntityManager()->getConnection()->prepare($query);
        $stmt->execute();
        return  '1';

    }



 
    
    
}

