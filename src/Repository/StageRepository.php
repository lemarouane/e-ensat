<?php

namespace App\Repository;

use App\Entity\Etudiant\Stage;
/**
 * StageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class StageRepository extends \Doctrine\ORM\EntityRepository
{
	


    public function getPFEbyFil($annee,$filiere,$statut) {

        $query="select s.id , u.code from stage s , etudiants u where u.id = s.user_id and s.statut = '".$statut."' and s.anneeuniv= '".$annee."' and ( ";

        if($filiere == 'IIGI3'){
            $query .=" s.filiere like 'IIGI3%' OR s.filiere like 'IISI3%' OR s.filiere like 'IIGL3%' OR";
        }else{
            $query .= "  s.filiere like '".$filiere."%' OR";
        }
        $query=substr($query, 0, -2);
		$query .= ") and s.typeStage_id=1 ";	

        if( $filiere ==  "%"){
            $query="select s.id , u.code from stage s , etudiants u where u.id = s.user_id and s.statut = '".$statut."' and s.anneeuniv= '".$annee."' and (s.filiere like '%3' or s.filiere like 'IM%') and s.typeStage_id=1 ";
        }

        $stmt = $this->getEntityManager()->getConnection()->prepare($query);
        $stmt1=$stmt->execute(); 
        $r_array = $stmt1->fetchAll();
        $result_stage_id = [] ;
        $result_etu_code = [] ;

         foreach ($r_array as $key => $value) {
           array_push($result_stage_id , $value['id']) ;
           array_push($result_etu_code , $value['code']) ;
         }

         return array($result_stage_id, $result_etu_code)  ;

    }

    public function getEtudiantsInscrits($cn,$annee,$filiere) {
        
        $query1="SELECT i.lib_nom_pat_ind , i.lib_pr1_ind , i.cod_nne_ind ,i.cod_etu ,i.cod_etu as code_stage ,i.cod_etu as code_encad, etp.cod_etp , i.cod_etu as email_inst FROM ins_adm_etp etp, individu i where i.cod_ind=etp.cod_ind and ( ";
        if($filiere == 'IIGI3'){
            $query1 .=" etp.cod_etp like 'IIGI3%' OR etp.cod_etp like 'IISI3%' OR etp.cod_etp like 'IIGL3%' OR";
        }else{
            $query1 .= "  etp.cod_etp like '".$filiere."%' OR";
        }

        $query1=substr($query1, 0, -2);
		$query1 .= ") and etp.eta_iae='E' and etp.cod_cmp='ENT' and etp.cod_anu='".$annee."'";	
       

        if( $filiere ==  "%"){
            $query1="SELECT i.lib_nom_pat_ind , i.lib_pr1_ind , i.cod_nne_ind ,i.cod_etu ,i.cod_etu as code_stage ,i.cod_etu as code_encad, etp.cod_etp , i.cod_etu as email_inst FROM ins_adm_etp etp, individu i where i.cod_ind=etp.cod_ind and (etp.cod_etp like 'II%3' or etp.cod_etp like 'IM%2' ) and etp.eta_iae='E' and etp.cod_cmp='ENT' and etp.cod_anu='".$annee."'";

        }
        //$stmt = $this->getEntityManager()->getConnection()->prepare($query);
        //$stmt1=$stmt->execute();
         $result= $cn->fetchAllAssociative($query1);

        return  $result;

    }

     public function nbStageByEtudiant($annee) {

        $query="select Count(*) as nombre, s.user_id as etudiant  from stage s where  s.statut = '1' and anneeuniv= '".$annee."' group By s.user_id ";
        $stmt = $this->getEntityManager()->getConnection()->prepare($query);
        $stmt1=$stmt->execute();
        return  $stmt1->fetchAll();

    }

    public function rechercheByStatut($annee) {
       
        $query = $this->createQueryBuilder('s');
        $query->andWhere('s.anneeuniv = :annee')->setParameter('annee', $annee);
        $query->andWhere('s.statut != :statut')->setParameter('statut', '-2');
        return $query->getQuery()->getResult(); 
    }

    public function searchByFiliere($annee,$filieres) {
       

            $query1="SELECT * FROM stage as s WHERE s.anneeuniv= '".$annee."' AND s.statut='-1' AND s.niveau ='0' AND ( ";
            foreach($filieres as $filiere){
                if($filiere == 'IIGI'){
                    $query1 .=" s.filiere like 'IIGI%' OR s.filiere like 'IISI%' OR s.filiere like 'IIGL%' OR";
                }else{
                    $query1 .= "  s.filiere like '".$filiere."%' OR";
                }
            }
            $query1=substr($query1, 0, -2);
		    $query1 .= ")";	

            $statement = $this->getEntityManager()->getConnection()->prepare($query1);
            $result = $statement->executeQuery()->fetchAllAssociative(); 
     
            return  $result ;
		
        
    }
	
	public function searchByFiliereAccepte($annee,$filiere) {
       
        
        
        if($filiere == 'IIGI'){
			$query = $this->createQueryBuilder('s');
			$query->andWhere('s.anneeuniv = :annee')->setParameter('annee', $annee);
			$query->andWhere('s.statut != :statut')->setParameter('statut', '-1');
            $query->andWhere('s.filiere like :keyword OR s.filiere like :key1 OR s.filiere like :key2 ')->setParameter('keyword',$filiere.'%')->setParameter('key1', 'IISI%')->setParameter('key2', 'IIGL%');
			return $query->getQuery()->getResult(); 
		}else{
			$query = $this->createQueryBuilder('s');
			$query->andWhere('s.anneeuniv = :annee')->setParameter('annee', $annee);
			$query->andWhere('s.statut != :statut')->setParameter('statut', '-1');
            $query->andWhere('s.filiere like :key3')->setParameter('key3', $filiere.'%');
				return $query->getQuery()->getResult(); 
        }
        
    }

    public function searchStageByFiliere($searchParam) {
      	extract($searchParam);
        $qb = $this->createQueryBuilder('st')
            ->leftJoin('st.typeStage', 'ty')
            ->addSelect('ty');


        if(!empty($annee) && $annee !="Tous")
            $qb->andWhere('st.anneeuniv =:anneeuniv')->setParameter('anneeuniv', $annee);

        if(!empty($statut) && $statut !="Tous")
            $qb->andWhere('st.statut =:statut')->setParameter('statut', $statut);

        if(!empty($typeStage) && $typeStage !="Tous")
            $qb->andWhere('ty.id =:type')->setParameter('type', $typeStage);


        return $qb->getQuery()->getResult();
    }

    public function nbDocumentParType($annee) {

        $query="SELECT t.libelle as NOMBRE, CAST((Count(*)*100)/(SELECT count(*) FROM stage st  WHERE st.anneeuniv = '".$annee."') AS DECIMAL(16, 2))  as y   FROM stage st,typestage t  WHERE st.anneeuniv = '".$annee."' and st.typeStage_id=t.id GROUP BY t.id ";
        $stmt = $this->getEntityManager()->getConnection()->prepare($query);
        $stmt1=$stmt->execute();
        return  $stmt1->fetchAll();

    }

    public function ConventionParFiliere($annee) {

        $query="SELECT Count(s.id) as NOMBRE, s.filiere as filiere  FROM stage s WHERE s.anneeuniv = '".$annee."' AND s.statut = '1' GROUP BY s.filiere ";
        $stmt = $this->getEntityManager()->getConnection()->prepare($query);
        $stmt1=$stmt->execute();
        return  $stmt1->fetchAll();

    }
	
	
	
	
}
